name: Generate files.json

permissions:
  contents: write  # allow workflow to push

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repo
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false  # use PAT instead of default GITHUB_TOKEN

      # Step 2: Setup Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # Step 3: Generate files.json at root
      - name: Generate files.json
        run: |
          python3 - <<'EOF'
          import os, json

          # Base URL for GitHub Pages
          GITHUB_BASE_URL = "https://codebyshivu.github.io/backend/"

          # Local app storage path
          LOCAL_BASE_PATH = ".appdata/"

          # Folder in repo containing files
          ROOT = "backend"

          files_list = []

          # Walk through all files recursively
          for root, dirs, files in os.walk(ROOT):
              for f in files:
                  # Only include .txt, .mp3, .json
                  if f.endswith(('.txt', '.mp3', '.json')):
                      rel_path = os.path.relpath(os.path.join(root, f), ROOT)
                      github_url = GITHUB_BASE_URL + rel_path.replace("\\", "/")
                      folder = rel_path.split(os.sep)[0].lower()
                      local_path = os.path.join(LOCAL_BASE_PATH, f".{folder}", f).replace("\\", "/")
                      files_list.append({"url": github_url, "path": local_path})

          # Final JSON
          data = {"files": files_list}

          # Write to files.json at repo root
          with open("files.json", "w", encoding="utf-8") as fp:
              json.dump(data, fp, indent=4, ensure_ascii=False)

          print("✅ files.json generated at root with all files")
          EOF

      # Step 4: Commit and push using PAT
      - name: Commit and push changes
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          if [ -z "$GH_PAT" ]; then
            echo "❌ GitHub PAT is missing! Please create secret GH_PAT."
            exit 1
          fi

          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add files.json
          git commit -m "Auto update files.json" || echo "No changes"
          git push https://$GH_PAT@github.com/${{ github.repository }} HEAD:main
