name: Generate files.json with paths

permissions:
  contents: write

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false  # use PAT for push

      # Step 2: Setup Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # Step 3: Generate files.json
      - name: Generate sitemap-style files.json
        run: |
          python3 - <<'EOF'
          import os, json

          GITHUB_BASE_URL = "https://codebyshivu.github.io/backend/"
          LOCAL_BASE_PATH = ".appdata/"
          ROOT = "."  # scan entire repository

          sitemap = {}

          for root_dir, dirs, files in os.walk(ROOT):
              for f in files:
                  if f.endswith(('.txt', '.mp3', '.json', '.md')):
                      rel_path = os.path.relpath(os.path.join(root_dir, f), ROOT)
                      parts = rel_path.split(os.sep)

                      # Determine folder for .appdata path
                      folder = parts[0].lower() if len(parts) > 1 else "root"
                      github_url = GITHUB_BASE_URL + rel_path.replace("\\", "/")
                      local_path = os.path.join(LOCAL_BASE_PATH, f".{folder}", f).replace("\\", "/")

                      # Skip files.json itself
                      if folder == "root" and f == "files.json":
                          continue

                      if folder not in sitemap:
                          sitemap[folder] = []
                      sitemap[folder].append({
                          "url": github_url,
                          "path": local_path
                      })

          with open("files.json", "w", encoding="utf-8") as fp:
              json.dump(sitemap, fp, indent=4, ensure_ascii=False)

          print(f"✅ files.json generated with {sum(len(v) for v in sitemap.values())} files")
          EOF

      # Step 4: Commit and push changes using PAT
      - name: Commit and push
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          if [ -z "$GH_PAT" ]; then
            echo "❌ GitHub PAT is missing!"
            exit 1
          fi

          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add files.json
          git commit -m "Auto update files.json" || echo "No changes"
          git push https://$GH_PAT@github.com/${{ github.repository }} HEAD:main
